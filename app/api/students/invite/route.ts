import { NextResponse } from "next/server"
import { getCurrentUser } from "@/lib/auth"
import { getUserById } from "@/lib/storage"
import { sendTelegramMessage } from "@/lib/telegram"

export async function POST(request) {
  try {
    const user = await getCurrentUser()

    if (!user || user.role !== "admin") {
      return NextResponse.json({ error: "Unauthorized" }, { status: 401 })
    }

    const { studentId } = await request.json()

    if (!studentId) {
      return NextResponse.json({ error: "Student ID is required" }, { status: 400 })
    }

    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç—É–¥–µ–Ω—Ç–µ
    const student = getUserById(studentId)
    if (!student) {
      return NextResponse.json({ error: "Student not found" }, { status: 404 })
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Telegram username
    if (!student.telegramUsername) {
      return NextResponse.json({ error: "Student does not have a Telegram username" }, { status: 400 })
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
    const message = `
<b>üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –∫—É—Ä—Å "–ê—Ä–∞–±—Å–∫–∏–π —Å –Ω—É–ª—è –¥–ª—è –¥–∞–º"!</b>

–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${student.name}!

–í—ã –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –Ω–∞ –∫—É—Ä—Å –∞—Ä–∞–±—Å–∫–æ–≥–æ —è–∑—ã–∫–∞. –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º –∫—É—Ä—Å–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ:

<b>–õ–æ–≥–∏–Ω:</b> ${student.email}
<b>–ü–∞—Ä–æ–ª—å:</b> –í—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º

–î–ª—è –≤—Ö–æ–¥–∞ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: https://your-domain.com/login

–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é.

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ –∫—É—Ä—Å–∞ "–ê—Ä–∞–±—Å–∫–∏–π —Å –Ω—É–ª—è –¥–ª—è –¥–∞–º"
    `.trim()

    // –ò–∑–≤–ª–µ–∫–∞–µ–º username –∏–∑ —Ñ–æ—Ä–º–∞—Ç–∞ @username
    const username = student.telegramUsername.startsWith("@")
      ? student.telegramUsername.substring(1)
      : student.telegramUsername

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
    const success = await sendTelegramMessage(message, username)

    if (success) {
      return NextResponse.json({ success: true })
    } else {
      return NextResponse.json({ error: "Failed to send invitation" }, { status: 500 })
    }
  } catch (error) {
    console.error("Error sending invitation:", error)
    return NextResponse.json({ error: "Failed to send invitation" }, { status: 500 })
  }
}
