// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
// –î–ª—è —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å Telegram Bot API
export async function sendTelegramMessage(
  message: string,
  chatId: string = process.env.TELEGRAM_ADMIN_CHAT_ID || "",
): Promise<boolean> {
  try {
    const botToken = process.env.TELEGRAM_BOT_TOKEN

    if (!botToken) {
      console.error("Telegram bot token is not set")
      return false
    }

    const url = `https://api.telegram.org/bot${botToken}/sendMessage`

    const response = await fetch(url, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        chat_id: chatId,
        text: message,
        parse_mode: "HTML",
      }),
    })

    const data = await response.json()
    return data.ok
  } catch (error) {
    console.error("Error sending Telegram message:", error)
    return false
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ
export function formatNewApplicationMessage(name: string, telegramUsername: string, message = ""): string {
  return `
<b>üéâ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∫—É—Ä—Å!</b>

<b>–ò–º—è:</b> ${name}
<b>Telegram:</b> ${telegramUsername}
${message ? `<b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b> ${message}` : ""}

<i>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å —Å–∞–π—Ç–∞ –∫—É—Ä—Å–∞ "–ê—Ä–∞–±—Å–∫–∏–π —Å –Ω—É–ª—è –¥–ª—è –¥–∞–º"</i>
  `.trim()
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º –¥–æ–º–∞—à–Ω–µ–º –∑–∞–¥–∞–Ω–∏–∏
export function formatNewHomeworkMessage(studentName: string, lessonTitle: string, fileName: string): string {
  return `
<b>üìö –ù–æ–≤–æ–µ –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ!</b>

<b>–£—á–µ–Ω–∏—Ü–∞:</b> ${studentName}
<b>–£—Ä–æ–∫:</b> ${lessonTitle}
<b>–§–∞–π–ª:</b> ${fileName}

<i>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–¥–∞–Ω–∏–µ –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏</i>
  `.trim()
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —É—á–µ–Ω–∏—Ü–µ –æ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è
export async function notifyStudentAboutFeedback(
  studentTelegram: string,
  lessonTitle: string,
  feedback: string,
): Promise<boolean> {
  const message = `
<b>‚úÖ –í–∞—à–µ –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ!</b>

<b>–£—Ä–æ–∫:</b> ${lessonTitle}
<b>–û—Ç–∑—ã–≤ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è:</b>
${feedback}

<i>–í–æ–π–¥–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏</i>
  `.trim()

  // –ò–∑–≤–ª–µ–∫–∞–µ–º username –∏–∑ —Ñ–æ—Ä–º–∞—Ç–∞ @username
  const username = studentTelegram.startsWith("@") ? studentTelegram.substring(1) : studentTelegram

  return sendTelegramMessage(message, username)
}
